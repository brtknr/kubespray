---

- name: centos, RHEL | Install openvpn requirements
  package: name=epel-release
  when: ansible_os_family == "RedHat" or ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: package | Install openvpn requirements
  package: name={{item}} update_cache=yes
  with_items:
    - openvpn
    - udev
    - openssl

- name: Alpine | Install openvpn requirements
  apk: name={{item}}
  with_items:
    - openvpn
    - udev
    - openssl
  when: ansible_os_family == "Alpine"
- name: map local config to {{ openvpnclient_confdir }}/openvpn.conf
  file: "src={{ openvpnclient_confdir }}/{{ inventory_hostname }}.conf dest={{ openvpnclient_confdir }}/openvpn.conf mode=0644 state=link force=yes"
  ignore_errors: true
  when: ansible_os_family == "Alpine"

- include: darwin.yml
  when: ansible_os_family == 'Darwin'

- name: push configuration
  copy: "src={{ item }} dest={{ openvpnclient_confdir }}/ mode=0400"
  with_items: openvpn_config_files
  notify:
    - restart openvpn
    - restart openvpn synology
    - restart openvpn - systemd
    - openvpn restart - darwin
  when: openvpn_config_files is defined

- name: push keys
  copy: "src={{ item }} dest={{ openvpnclient_confdir }}/keys/ mode=0400"
  with_items: openvpn_config_keys
  notify:
    - restart openvpn
    - restart openvpn synology
    - restart openvpn - systemd
    - openvpn restart - darwin
  when: openvpn_config_keys is defined

- name: Create config for login/pass authenticated users
  template: "src=openvpn-user.ovpn dest={{ openvpnclient_confdir }}/openvpn-{{ item.u }}.{{ openvpnclient_ext }} mode=0400"
  with_items: openvpn_config_users
  notify:
    - restart openvpn
    - restart openvpn synology
    - restart openvpn - systemd
    - openvpn restart - darwin
  when: openvpn_config_users is defined

- blockinfile:
    dest: "{{ openvpnclient_confdir }}/keys/login-{{ item.u }}.txt"
    mode: 0400
    create: yes
#    marker: ''
    block: |
      {{ item.u }}
      {{ item.p }}
  with_items: openvpn_config_users
  notify:
    - restart openvpn
    - restart openvpn synology
    - restart openvpn - systemd
    - openvpn restart - darwin
  when: openvpn_config_users is defined

## http://fedoraproject.org/wiki/Openvpn
- stat: path='/lib/systemd/system/openvpn@.service'
  register: systemd
- name: symlink starting config - systemd only
  file: src='/lib/systemd/system/openvpn@.service' dest="/etc/systemd/system/openvpn@{{ inventory_hostname }}.service" state=link
  when: systemd.stat.exists
  register: out
- debug: var=out

- name: Ensure services are enabled and started
  service: name=openvpn enabled=yes state=started
  when: ansible_system == 'Linux' and ansible_distribution != 'Alpine'

## Not valid on bare system as there is no default config ...
#- name: Ensure services are enabled and started - systemd
### NOK
### FAILED! => {"changed": false, "failed": true, "msg": "Error when trying to enable openvpn@HOST: rc=1 Failed to execute operation: Too many levels of symbolic links\n"}
##  service: name="openvpn@{{ inventory_hostname }}" enabled=yes state=started
### OK
#  service: name="openvpn@{{ inventory_hostname }}" state=started
#  when: ansible_system == "Linux" and ansible_service_mgr == 'systemd'

- block:
    - file: dest=/etc/aide/aide.conf.d state=directory mode=0755
    - name: add additional aide HIDS configuration
      copy: src=99_aide_local_openvpn dest=/etc/aide/aide.conf.d/99_aide_local_openvpn mode=0644
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

